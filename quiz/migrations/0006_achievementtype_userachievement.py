# Generated by Django 5.0.7 on 2024-11-10 04:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('quiz', '0005_alter_questao_enunciado'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('requirement_type', models.CharField(choices=[('total_correct', 'Total Correct Answers'), ('subject_correct', 'Subject Correct Answers'), ('topic_correct', 'Topic Correct Answers'), ('streak', 'Answer Streak')], max_length=50)),
                ('requirement_value', models.IntegerField()),
                ('requirement_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quiz.materia')),
                ('requirement_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quiz.assunto')),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(auto_now_add=True)),
                ('progress', models.IntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('achievement_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.achievementtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement_type')},
            },
        ),
    ]
